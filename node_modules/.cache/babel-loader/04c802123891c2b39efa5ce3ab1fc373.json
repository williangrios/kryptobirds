{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\ITAUTEC\\\\Desktop\\\\SOLIDITY\\\\CURSO NFT MINTER\\\\nft-marketplace-starter-kit-main\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\ITAUTEC\\\\Desktop\\\\SOLIDITY\\\\CURSO NFT MINTER\\\\nft-marketplace-starter-kit-main\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\ITAUTEC\\\\Desktop\\\\SOLIDITY\\\\CURSO NFT MINTER\\\\nft-marketplace-starter-kit-main\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ITAUTEC\\\\Desktop\\\\SOLIDITY\\\\CURSO NFT MINTER\\\\nft-marketplace-starter-kit-main\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\ITAUTEC\\\\Desktop\\\\SOLIDITY\\\\CURSO NFT MINTER\\\\nft-marketplace-starter-kit-main\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\ITAUTEC\\\\Desktop\\\\SOLIDITY\\\\CURSO NFT MINTER\\\\nft-marketplace-starter-kit-main\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\ITAUTEC\\\\Desktop\\\\SOLIDITY\\\\CURSO NFT MINTER\\\\nft-marketplace-starter-kit-main\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\ITAUTEC\\\\Desktop\\\\SOLIDITY\\\\CURSO NFT MINTER\\\\nft-marketplace-starter-kit-main\\\\src\\\\components\\\\App.js\";\n//importando tudo na mão\nimport React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport KryptoBirdz from \"../abis/KryptoBirdz.json\"; //extends\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    //método para executar o método loadWeb3\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchain();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }() //método para conectar com a wallet\n\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var provider;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return detectEthereumProvider();\n\n              case 2:\n                provider = _context2.sent;\n\n                //tratando a conexão\n                if (provider) {\n                  console.log('Ethereum wallet is connected');\n                  window.web3 = new Web3(provider);\n                } else {\n                  console.log('No Ethereum wallet detected');\n                }\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchain\",\n    value: function () {\n      var _loadBlockchain = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return window.web.eth.getAccounts();\n\n              case 2:\n                accounts = _context3.sent;\n                console.log(accounts);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function loadBlockchain() {\n        return _loadBlockchain.apply(this, arguments);\n      }\n\n      return loadBlockchain;\n    }() //render \n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Tokens NFT\"));\n    }\n  }]);\n\n  return App;\n}(Component); //exportar a classe App\n\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\ITAUTEC\\Desktop\\SOLIDITY\\CURSO NFT MINTER\\nft-marketplace-starter-kit-main\\src\\components\\App.js"],"names":["React","Component","Web3","detectEthereumProvider","KryptoBirdz","App","loadWeb3","loadBlockchain","provider","console","log","window","web3","web","eth","getAccounts","accounts"],"mappings":";;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,sBAAP,MAAmC,2BAAnC;AACA,OAAOC,WAAP,MAAwB,0BAAxB,C,CAGA;;IACMC,G;;;;;;;;;;;;;AAEF;;;;;;;;;;uBAEU,KAAKC,QAAL,E;;;;uBACA,KAAKC,cAAL,E;;;;;;;;;;;;;;;QAGV;;;;;;;;;;;;;;uBAI2BJ,sBAAsB,E;;;AAAvCK,gBAAAA,Q;;AAEN;AACA,oBAAIA,QAAJ,EAAc;AACVC,kBAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACAC,kBAAAA,MAAM,CAACC,IAAP,GAAc,IAAIV,IAAJ,CAASM,QAAT,CAAd;AACH,iBAHD,MAIK;AACDC,kBAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBAKsBC,MAAM,CAACE,GAAP,CAAWC,GAAX,CAAeC,WAAf,E;;;AAAjBC,gBAAAA,Q;AACNP,gBAAAA,OAAO,CAACC,GAAR,CAAYM,QAAZ;;;;;;;;;;;;;;;QAGJ;;;;6BACQ;AACJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CADJ;AAKH;;;;EArCaf,S,GAyClB;;;AACA,eAAeI,GAAf","sourcesContent":["//importando tudo na mão\r\nimport React, {Component} from \"react\";\r\nimport Web3 from \"web3\";\r\nimport detectEthereumProvider from \"@metamask/detect-provider\";\r\nimport KryptoBirdz from \"../abis/KryptoBirdz.json\";\r\n\r\n\r\n//extends\r\nclass App extends Component{\r\n\r\n    //método para executar o método loadWeb3\r\n    async componentDidMount() {\r\n        await this.loadWeb3();\r\n        await this.loadBlockchain();\r\n    }\r\n\r\n    //método para conectar com a wallet\r\n    async loadWeb3(){\r\n\r\n        //conexão com a wallet por meio da detectEtheerumProvider()\r\n        const provider = await detectEthereumProvider();\r\n\r\n        //tratando a conexão\r\n        if (provider) {\r\n            console.log('Ethereum wallet is connected');\r\n            window.web3 = new Web3(provider);\r\n        }\r\n        else {\r\n            console.log('No Ethereum wallet detected');\r\n        }\r\n\r\n    }\r\n\r\n    async loadBlockchain() {\r\n        const accounts = await window.web.eth.getAccounts();\r\n        console.log(accounts);\r\n    }\r\n\r\n    //render \r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>Tokens NFT</h1>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n//exportar a classe App\r\nexport default App;"]},"metadata":{},"sourceType":"module"}